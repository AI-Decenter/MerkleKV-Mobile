version: '3.8'

services:
  # Frontend - React TypeScript Admin Dashboard
  frontend:
    build:
      context: ./web-frontend
      dockerfile: Dockerfile
    container_name: merklekv-admin-frontend
    ports:
      - "3000:80"
    depends_on:
      - api-server
    environment:
      - REACT_APP_API_URL=http://localhost:3001
    networks:
      - merklekv-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Enhanced Backend API Server
  api-server:
    build:
      context: ./api-server
      dockerfile: Dockerfile
    container_name: merklekv-api-server
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - JWT_SECRET=merklekv-super-secret-jwt-key-2025
    volumes:
      - ./api-server/audit.log:/app/audit.log
    networks:
      - merklekv-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MQTT Metrics Collector
  metrics-collector:
    build: ./metrics-collector
    container_name: merklekv-metrics-collector
    ports:
      - "4000:4000"
    environment:
      - MQTT_BROKER=mqtt://mqtt-broker:1883
      - REDIS_URL=redis://redis:6379
      - PORT=4000
    depends_on:
      - mqtt-broker
      - redis
    networks:
      - merklekv-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Configuration Manager
  config-manager:
    build: ./config-manager
    container_name: merklekv-config-manager
    ports:
      - "4100:4100"
    environment:
      - PORT=4100
      - CONFIG_DIR=/app/storage
    volumes:
      - config_data:/app/storage
    networks:
      - merklekv-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4100/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Troubleshooting Tools
  troubleshooting-tools:
    build: ./troubleshooting-tools
    container_name: merklekv-troubleshooting-tools
    ports:
      - "4200:4200"
      - "4201:4201"  # WebSocket port
    environment:
      - PORT=4200
      - LOG_DIR=/app/logs
    volumes:
      - logs_data:/app/logs
    networks:
      - merklekv-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4200/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: merklekv-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=merklekv
      - POSTGRES_USER=merklekv
      - POSTGRES_PASSWORD=merklekv_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - merklekv-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U merklekv"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: merklekv-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass merklekv_redis_password
    volumes:
      - redis_data:/data
    networks:
      - merklekv-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "merklekv_redis_password", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MQTT Broker (Eclipse Mosquitto)
  mqtt-broker:
    image: eclipse-mosquitto:2.0
    container_name: merklekv-mqtt
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - mosquitto_config:/mosquitto/config
      - mosquitto_data:/mosquitto/data
      - mosquitto_logs:/mosquitto/log
    networks:
      - merklekv-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "timeout", "5", "mosquitto_pub", "-h", "localhost", "-t", "test", "-m", "health_check"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  config_data:
    driver: local
  logs_data:
    driver: local
  mosquitto_config:
    driver: local
  mosquitto_data:
    driver: local
  mosquitto_logs:
    driver: local

networks:
  merklekv-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16