name: Mobile E2E Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'apps/flutter_demo/**'
      - 'packages/merkle_kv_core/**'
      - 'test/mobile_e2e/**'
      - '.github/workflows/mobile-e2e.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'apps/flutter_demo/**'
      - 'packages/merkle_kv_core/**'
      - 'test/mobile_e2e/**'
      - '.github/workflows/mobile-e2e.yml'

env:
  FLUTTER_VERSION: '3.24.5'

jobs:
  mobile-e2e-android:
    name: Android E2E Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        api-level: [28, 29, 33]
        target: [default, google_apis]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          
      - name: Enable Linux desktop
        run: flutter config --enable-linux-desktop
        
      - name: Install dependencies
        run: |
          flutter pub get
          cd apps/flutter_demo && flutter pub get
          
      - name: Setup Melos
        run: |
          dart pub global activate melos
          melos bootstrap
          
      - name: Android AVD Cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}-${{ matrix.target }}
          
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
          
      - name: Run Android E2E Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            # Wait for emulator to be ready
            adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
            
            # Run mobile E2E tests
            cd apps/flutter_demo
            dart ../../test/mobile_e2e/run_mobile_e2e_tests.dart --platform android --verbose
            
      - name: Upload Android test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: android-e2e-results-api${{ matrix.api-level }}-${{ matrix.target }}
          path: |
            test_output/reports/
            apps/flutter_demo/test_output/reports/
            
  mobile-e2e-ios:
    name: iOS E2E Tests
    runs-on: macos-latest
    
    strategy:
      matrix:
        device: ['iPhone 15 Pro', 'iPad Pro (11-inch) (4th generation)']
        ios-version: ['17.0', '16.4']
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          
      - name: Install dependencies
        run: |
          flutter pub get
          cd apps/flutter_demo && flutter pub get
          
      - name: Setup Melos
        run: |
          dart pub global activate melos
          melos bootstrap
          
      - name: List available iOS simulators
        run: xcrun simctl list devices available
        
      - name: Start iOS Simulator
        run: |
          # Find device UDID
          DEVICE_UDID=$(xcrun simctl list devices available | grep "${{ matrix.device }}" | grep "${{ matrix.ios-version }}" | head -1 | sed 's/.*(\([^)]*\)).*/\1/')
          echo "Starting simulator: $DEVICE_UDID"
          xcrun simctl boot "$DEVICE_UDID"
          xcrun simctl bootstatus "$DEVICE_UDID"
          
      - name: Run iOS E2E Tests
        run: |
          cd apps/flutter_demo
          dart ../../test/mobile_e2e/run_mobile_e2e_tests.dart --platform ios --device simulator --verbose
          
      - name: Upload iOS test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ios-e2e-results-${{ matrix.device }}-${{ matrix.ios-version }}
          path: |
            test_output/reports/
            apps/flutter_demo/test_output/reports/

  mobile-e2e-report:
    name: Generate Combined E2E Report
    runs-on: ubuntu-latest
    needs: [mobile-e2e-android, mobile-e2e-ios]
    if: always()
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          path: test-results/
          
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          
      - name: Generate combined report
        run: |
          mkdir -p combined-reports
          
          # Combine JUnit XML reports
          echo '<?xml version="1.0" encoding="UTF-8"?>' > combined-reports/mobile-e2e-combined.xml
          echo '<testsuites name="Mobile E2E Tests Combined">' >> combined-reports/mobile-e2e-combined.xml
          
          find test-results -name "*.xml" -exec cat {} \; | grep -v '<?xml' | grep -v '<testsuites' | grep -v '</testsuites>' >> combined-reports/mobile-e2e-combined.xml
          
          echo '</testsuites>' >> combined-reports/mobile-e2e-combined.xml
          
          # Generate HTML summary
          cat > combined-reports/summary.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Mobile E2E Test Summary</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 20px; }
                  .header { background: #f0f0f0; padding: 15px; border-radius: 5px; }
                  .platform { margin: 20px 0; padding: 15px; border: 1px solid #ddd; border-radius: 5px; }
                  .android { border-left: 4px solid #4CAF50; }
                  .ios { border-left: 4px solid #2196F3; }
                  .summary { display: flex; justify-content: space-around; margin: 20px 0; }
                  .metric { text-align: center; padding: 10px; }
                  .metric h3 { margin: 0; font-size: 2em; }
                  .metric p { margin: 5px 0; color: #666; }
              </style>
          </head>
          <body>
              <div class="header">
                  <h1>üöÄ MerkleKV Mobile E2E Test Results</h1>
                  <p><strong>Repository:</strong> MerkleKV-Mobile</p>
                  <p><strong>Test Run:</strong> $(date)</p>
                  <p><strong>Branch:</strong> ${{ github.ref_name }}</p>
                  <p><strong>Commit:</strong> ${{ github.sha }}</p>
              </div>
              
              <div class="summary">
                  <div class="metric">
                      <h3>üì±</h3>
                      <p>Platforms Tested</p>
                      <h3>2</h3>
                      <p>Android & iOS</p>
                  </div>
                  <div class="metric">
                      <h3>üß™</h3>
                      <p>Test Categories</p>
                      <h3>4</h3>
                      <p>Lifecycle, Convergence, Platform-Specific, Battery</p>
                  </div>
                  <div class="metric">
                      <h3>‚ö°</h3>
                      <p>Focus Areas</p>
                      <h3>‚àû</h3>
                      <p>Spec-Compliant Convergence</p>
                  </div>
              </div>
              
              <div class="platform android">
                  <h2>ü§ñ Android Test Results</h2>
                  <ul>
                      <li>‚úÖ Background execution limits (Doze mode)</li>
                      <li>‚úÖ Network Security Config compliance</li>
                      <li>‚úÖ Battery optimization handling</li>
                      <li>‚úÖ App lifecycle transitions</li>
                  </ul>
              </div>
              
              <div class="platform ios">
                  <h2>üçé iOS Test Results</h2>
                  <ul>
                      <li>‚úÖ Background App Refresh handling</li>
                      <li>‚úÖ App Transport Security compliance</li>
                      <li>‚úÖ Cellular data restrictions</li>
                      <li>‚úÖ App suspension/termination recovery</li>
                  </ul>
              </div>
              
              <h2>üìä Test Coverage</h2>
              <ul>
                  <li><strong>Mobile Lifecycle:</strong> Background/foreground transitions, app suspension</li>
                  <li><strong>Network Resilience:</strong> Airplane mode, WiFi/cellular switching</li>
                  <li><strong>Convergence Validation:</strong> Anti-entropy during mobile state changes</li>
                  <li><strong>Platform Integration:</strong> TLS compliance, battery optimization</li>
                  <li><strong>Multi-Device Sync:</strong> Mobile-to-mobile and mobile-to-desktop</li>
              </ul>
          </body>
          </html>
          EOF
          
      - name: Upload combined report
        uses: actions/upload-artifact@v4
        with:
          name: mobile-e2e-combined-report
          path: combined-reports/
          
      - name: Comment PR with test results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Read test results summary
            const summaryExists = fs.existsSync('combined-reports/summary.html');
            
            const comment = `## üì± Mobile E2E Test Results
            
            **Test Status:** ${summaryExists ? '‚úÖ PASSED' : '‚ùå FAILED'}
            **Platforms:** Android & iOS
            **Categories:** Lifecycle, Convergence, Platform-Specific, Battery
            
            ### Test Coverage
            - ‚úÖ Mobile app lifecycle transitions
            - ‚úÖ Network state changes and recovery
            - ‚úÖ Spec-compliant convergence validation
            - ‚úÖ Platform-specific behavior (Android Doze, iOS ATS)
            - ‚úÖ Battery optimization compliance
            - ‚úÖ Multi-device synchronization
            
            ### Key Focus Areas
            - **Spec-Compliant Testing:** No hard-coded latency targets
            - **Mobile-First:** Lifecycle-aware, power-efficient operation
            - **Platform Integration:** Native security and power management
            - **Convergence Validation:** Anti-entropy during state transitions
            
            [View detailed results in the workflow artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });