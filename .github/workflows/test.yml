name: Tests
on: [push, pull_request]

jobs:
  unit:
    runs-on: ubuntu-latest
    container:
      image: dart:3.9.3
    defaults:
      run:
        working-directory: packages/merkle_kv_core
    steps:
      - uses: actions/checkout@v4
      - name: Fix missing frontend_server.dart.snapshot
        run: |
          # Create the missing snapshot using the available AOT version
          if [ ! -f /usr/lib/dart/bin/snapshots/frontend_server.dart.snapshot ]; then
            cp /usr/lib/dart/bin/snapshots/frontend_server_aot.dart.snapshot /usr/lib/dart/bin/snapshots/frontend_server.dart.snapshot
          fi
      - run: dart pub get
      - run: dart analyze
      - name: Run unit tests
        run: dart test -x integration --reporter=expanded --timeout=30s

  integration:
    runs-on: ubuntu-latest
    container:
      image: dart:3.9.3
    defaults:
      run:
        working-directory: packages/merkle_kv_core
    env:
      MQTT_HOST: 127.0.0.1
      MQTT_PORT: 1883
      IT_REQUIRE_BROKER: '1'
    steps:
      - uses: actions/checkout@v4
      - name: Start Mosquitto broker
        run: |
          apt-get update && apt-get install -y netcat-traditional docker.io
          docker run -d \
            --name mosquitto \
            -p 1883:1883 \
            -v ${{ github.workspace }}/.ci/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf \
            eclipse-mosquitto:2
          # Wait for Mosquitto to be ready
          for i in {1..30}; do
            if nc -z 127.0.0.1 1883; then
              echo "Mosquitto is ready"
              break
            fi
            echo "Waiting for Mosquitto... ($i/30)"
            sleep 1
          done
      - name: Fix missing frontend_server.dart.snapshot
        run: |
          # Create the missing snapshot using the available AOT version
          if [ ! -f /usr/lib/dart/bin/snapshots/frontend_server.dart.snapshot ]; then
            cp /usr/lib/dart/bin/snapshots/frontend_server_aot.dart.snapshot /usr/lib/dart/bin/snapshots/frontend_server.dart.snapshot
          fi
      - run: dart pub get
      - name: Run integration tests
        run: |
          dart test test/replication/integration_test.dart --reporter=expanded --timeout=90s --chain-stack-traces
          dart test test/replication/event_publisher_integration_test.dart --reporter=expanded --timeout=90s --chain-stack-traces
          dart test test/commands/integration_test.dart --reporter=expanded --timeout=90s --chain-stack-traces