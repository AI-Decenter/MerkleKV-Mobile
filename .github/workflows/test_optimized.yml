name: Tests
on:
  push:
    branches: [ main, develop ]
    paths:
      - 'packages/merkle_kv_core/**'
      - '.github/workflows/test_optimized.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'packages/merkle_kv_core/**'
      - '.github/workflows/test_optimized.yml'

jobs:
  unit:
    name: Unit Tests & Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: packages/merkle_kv_core
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@v1
        with:
          sdk: 'stable'
          
      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            packages/merkle_kv_core/.dart_tool
          key: ${{ runner.os }}-dart-v2-${{ hashFiles('packages/merkle_kv_core/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-dart-v2-
            
      - name: Clean build artifacts
        run: |
          echo "Cleaning all build artifacts..."
          rm -rf packages/merkle_kv_core/.dart_tool
          rm -rf packages/merkle_kv_core/build
          rm -rf packages/merkle_kv_core/.packages
          rm -rf packages/merkle_kv_core/pubspec.lock
          echo "✅ Build artifacts cleaned"
          
      - name: Install dependencies
        working-directory: packages/merkle_kv_core
        run: |
          echo "Installing dependencies with verbose output..."
          dart pub get --verbose
          echo "✅ Dependencies installed"
        
      - name: Verify dependencies
        working-directory: packages/merkle_kv_core
        run: |
          echo "Verifying dependencies..."
          dart pub deps
          echo "Checking dart SDK version..."
          dart --version
          echo "Checking test package availability..."
          dart pub deps | grep test || echo "Test package not found!"
          echo "✅ Dependencies verified"
        
      - name: Debug test environment
        working-directory: packages/merkle_kv_core
        run: |
          echo "=== Debug Information ==="
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          echo "Pubspec.yaml exists: $(test -f pubspec.yaml && echo 'YES' || echo 'NO')"
          echo "Dart tool directory:"
          ls -la .dart_tool/ || echo "No .dart_tool directory"
          echo "Test directory contents:"
          find test/ -name "*.dart" | head -5
          echo "==========================="
        
      - name: Run unit tests
        working-directory: packages/merkle_kv_core
        run: |
          echo "Running unit tests..."
          dart test test/unit/ --reporter=github
          
      - name: Run unit tests with coverage
        working-directory: packages/merkle_kv_core
        run: |
          echo "Running unit tests with coverage..."
          dart test test/unit/ --coverage=coverage
        
      - name: Generate coverage report
        working-directory: packages/merkle_kv_core
        run: |
          dart pub global activate coverage
          dart pub global run coverage:format_coverage --lcov --in=coverage --out=coverage.lcov --report-on=lib
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: packages/merkle_kv_core/coverage.lcov
          flags: unittests
          name: merkle-kv-core

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    defaults:
      run:
        working-directory: packages/merkle_kv_core
    env:
      MQTT_TEST_HOST: 127.0.0.1
      MQTT_TEST_PORT: 1883
      CI: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@v1
        with:
          sdk: 'stable'
          
      - name: Create MQTT broker configuration
        run: |
          echo "listener 1883" > /tmp/mosquitto.conf
          echo "allow_anonymous true" >> /tmp/mosquitto.conf
          echo "log_dest stdout" >> /tmp/mosquitto.conf
          cat /tmp/mosquitto.conf
          
      - name: Start MQTT broker
        run: |
          docker run -d --name mosquitto \
            -p 1883:1883 \
            -v /tmp/mosquitto.conf:/mosquitto/config/mosquitto.conf \
            eclipse-mosquitto:2.0
          
      - name: Wait for MQTT broker to be ready
        run: |
          echo "Waiting for MQTT broker to start..."
          for i in {1..30}; do
            if nc -z 127.0.0.1 1883 2>/dev/null; then
              echo "✅ MQTT broker is ready on port 1883"
              break
            fi
            echo "Waiting for MQTT broker... ($i/30)"
            sleep 2
          done
          
          # Final check
          if ! nc -z 127.0.0.1 1883; then
            echo "❌ MQTT broker failed to start"
            docker logs mosquitto
            exit 1
          fi
          
          # Give the broker additional time to fully initialize after port opens
          echo "Waiting additional 30 seconds for broker initialization..."
          sleep 30
          
          # Test with verbose mosquitto_pub to ensure broker is fully functional
          echo "Testing MQTT broker connectivity..."
          for attempt in 1 2 3; do
            if docker exec mosquitto mosquitto_pub -d -h localhost -t test -m "broker ready"; then
              echo "✅ MQTT broker is functional (attempt $attempt)"
              break
            else
              echo "❌ MQTT broker connection test failed (attempt $attempt/3)"
              if [ $attempt -eq 3 ]; then
                echo "Final attempt failed. Checking logs..."
                docker logs mosquitto
                exit 1
              else
                echo "Retrying in 5 seconds..."
                sleep 5
              fi
            fi
          done
          
      - name: Show MQTT broker status
        run: |
          echo "MQTT Broker Status:"
          docker ps | grep mosquitto
          echo "MQTT Broker Logs:"
          docker logs mosquitto | tail -10
          
      - name: Install dependencies
        working-directory: packages/merkle_kv_core
        run: dart pub get
        
      - name: Run integration tests with real MQTT broker
        working-directory: packages/merkle_kv_core
        run: |
          # Set environment for integration tests with real broker
          export MQTT_TEST_HOST=127.0.0.1
          export MQTT_TEST_PORT=1883
          export MQTT_CONNECT_TIMEOUT=10
          export MQTT_TEST_TIMEOUT=15
          
          # Run integration tests that need real MQTT broker
          dart test test/ --tags=integration --reporter=github --timeout=60s
        
      - name: Show MQTT broker logs on failure
        if: failure()
        run: |
          echo "MQTT Broker Logs (last 50 lines):"
          docker logs mosquitto | tail -50
          
      - name: Stop MQTT broker
        if: always()
        run: docker stop mosquitto && docker rm mosquitto