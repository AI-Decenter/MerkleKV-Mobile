#!/bin/bash

echo "üöÄ MerkleKV Mobile Android Testing Script"
echo "========================================"

# Set environment variables
export PATH="$PATH:/opt/flutter/bin"
export ANDROID_HOME=/opt/android-sdk
export PATH="$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}B∆∞·ªõc 1: Ki·ªÉm tra thi·∫øt l·∫≠p m√¥i tr∆∞·ªùng${NC}"
echo "-----------------------------------"

# Check Flutter
if command -v flutter &> /dev/null; then
    echo -e "‚úÖ Flutter: $(flutter --version | head -n1)"
else
    echo -e "${RED}‚ùå Flutter kh√¥ng ƒë∆∞·ª£c t√¨m th·∫•y${NC}"
    exit 1
fi

# Check ADB
if command -v adb &> /dev/null; then
    echo -e "‚úÖ ADB: $(adb version | head -n1)"
else
    echo -e "${RED}‚ùå ADB kh√¥ng ƒë∆∞·ª£c t√¨m th·∫•y${NC}"
    exit 1
fi

echo ""
echo -e "${BLUE}B∆∞·ªõc 2: Ki·ªÉm tra k·∫øt n·ªëi Android devices${NC}"
echo "----------------------------------------"

# Check connected devices
DEVICES=$(adb devices | grep -v "List of devices attached" | grep -v "^$" | wc -l)

if [ $DEVICES -eq 0 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Kh√¥ng c√≥ Android device n√†o ƒë∆∞·ª£c k·∫øt n·ªëi${NC}"
    echo ""
    echo -e "${YELLOW}H∆∞·ªõng d·∫´n k·∫øt n·ªëi Android device:${NC}"
    echo "1. B·∫≠t Developer Options v√† USB Debugging tr√™n ƒëi·ªán tho·∫°i"
    echo "2. C·∫Øm cable USB"
    echo "3. Ch·∫•p nh·∫≠n USB debugging prompt tr√™n ƒëi·ªán tho·∫°i"
    echo "4. Ch·∫°y l·∫°i script n√†y"
    echo ""
    echo -e "${BLUE}ƒê·ªÉ ki·ªÉm tra l·∫°i, ch·∫°y: adb devices${NC}"
    echo ""
    echo -e "${YELLOW}Ti·∫øp t·ª•c v·ªõi emulator ho·∫∑c desktop testing...${NC}"
else
    echo -e "‚úÖ T√¨m th·∫•y $DEVICES Android device(s):"
    adb devices
fi

echo ""
echo -e "${BLUE}B∆∞·ªõc 3: Ki·ªÉm tra Flutter devices${NC}"
echo "-------------------------------"
cd /workspaces/MerkleKV-Mobile/apps/flutter_demo
flutter devices

echo ""
echo -e "${BLUE}B∆∞·ªõc 4: C√†i ƒë·∫∑t dependencies${NC}"
echo "----------------------------"
flutter pub get

echo ""
echo -e "${BLUE}B∆∞·ªõc 5: Ch·∫°y tests c√≥ s·∫µn${NC}"
echo "-------------------------"

# Check if we have connected Android devices
ANDROID_DEVICES=$(flutter devices | grep "android" | wc -l)

if [ $ANDROID_DEVICES -gt 0 ]; then
    echo -e "${GREEN}üéØ Ch·∫°y integration tests tr√™n Android device...${NC}"
    flutter test integration_test/merkle_kv_integration_test.dart
else
    echo -e "${YELLOW}‚ö†Ô∏è  Kh√¥ng c√≥ Android device, ch·∫°y unit tests...${NC}"
    # Run unit tests from core package
    cd ../../packages/merkle_kv_core
    flutter test
    cd ../../apps/flutter_demo
fi

echo ""
echo -e "${BLUE}B∆∞·ªõc 6: T·∫°o demo app${NC}"
echo "-------------------"

# Check if we can build for Android
if [ $ANDROID_DEVICES -gt 0 ]; then
    echo -e "${GREEN}üî® Building APK for testing...${NC}"
    flutter build apk --debug
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ APK ƒë√£ ƒë∆∞·ª£c t·∫°o t·∫°i: build/app/outputs/flutter-apk/app-debug.apk${NC}"
        echo -e "${BLUE}üí° ƒê·ªÉ c√†i ƒë·∫∑t: adb install build/app/outputs/flutter-apk/app-debug.apk${NC}"
    else
        echo -e "${RED}‚ùå Build APK th·∫•t b·∫°i${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  Kh√¥ng c√≥ Android device ƒë·ªÉ build APK${NC}"
    echo -e "${BLUE}üí° C√≥ th·ªÉ ch·∫°y tr√™n desktop: flutter run -d linux${NC}"
fi

echo ""
echo -e "${BLUE}B∆∞·ªõc 7: H∆∞·ªõng d·∫´n testing th·ªß c√¥ng${NC}"
echo "--------------------------------"

echo -e "${GREEN}ƒê·ªÉ test MerkleKV Mobile tr√™n Android device:${NC}"
echo ""
echo "1. ƒê·∫£m b·∫£o device ƒë√£ ƒë∆∞·ª£c k·∫øt n·ªëi (adb devices)"
echo "2. Ch·∫°y app: flutter run"
echo "3. Test c√°c t√≠nh nƒÉng:"
echo "   - SET/GET operations"
echo "   - Multi-node replication"
echo "   - Network disconnect/reconnect"
echo "   - Background/foreground switching"
echo ""

echo -e "${GREEN}ƒê·ªÉ test performance:${NC}"
echo "- Monitor memory usage"
echo "- Check battery consumption"
echo "- Measure response times"
echo "- Test with large datasets"
echo ""

echo -e "${GREEN}ƒê·ªÉ test replication:${NC}"
echo "- Run app on 2 different devices"
echo "- Test data sync between devices"
echo "- Test conflict resolution (LWW)"
echo ""

echo -e "${BLUE}üéâ Script ho√†n th√†nh! S·∫µn s√†ng testing tr√™n Android device.${NC}"
echo ""
echo -e "${YELLOW}üìñ Xem th√™m h∆∞·ªõng d·∫´n chi ti·∫øt trong: ANDROID_TESTING.md${NC}"
