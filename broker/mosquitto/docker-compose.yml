version: '3.8'

services:
  mosquitto:
    build: .
    container_name: merkle_kv_mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"    # MQTT
      - "8883:8883"    # MQTT over TLS
      - "9001:9001"    # WebSockets
    volumes:
      - ./config:/mosquitto/config:ro
      - ./data:/mosquitto/data
      - ./log:/mosquitto/log
    environment:
      - TZ=UTC
    networks:
      - merkle_kv_network
    healthcheck:
      test: ["CMD-SHELL", "mosquitto_sub -h localhost -t '$$SYS/broker/uptime' -C 1 | grep -q '[0-9]'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Optional: MQTT Explorer for debugging
  mqtt-explorer:
    image: smeagolworms4/mqtt-explorer
    container_name: merkle_kv_mqtt_explorer
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      - HTTP_PORT=4000
    networks:
      - merkle_kv_network
    depends_on:
      - mosquitto
    profiles:
      - debug

  # Optional: Prometheus monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: merkle_kv_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - merkle_kv_network
    profiles:
      - monitoring

  # Optional: Grafana dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: merkle_kv_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - merkle_kv_network
    depends_on:
      - prometheus
    profiles:
      - monitoring

networks:
  merkle_kv_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
